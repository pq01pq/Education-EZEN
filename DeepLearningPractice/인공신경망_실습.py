# -*- coding: utf-8 -*-
"""인공신경망 실습.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L8Q-02ersnnC-ZIYjOzSBzJAb3Rt0QDs
"""

import tensorflow as tf

!pip uninstall tensorflow

!pip install tensorflow==2.0.0

import tensorflow as tf

from keras.datasets import fashion_mnist

(x_train_data, t_train_data), (x_test_data, t_test_data) = fashion_mnist.load_data()

x_train = x_train_data
x_test = x_test_data
t_train = t_train_data
t_test = t_test_data

print("x_train shape:", x_train.shape, "t_train shape:", t_train.shape)

#28X28 픽셀, 데이터 개수가 6만개

import matplotlib.pyplot as plt

plt.imshow(x_train[4000])
plt.colorbar()

x_train = x_train.astype('float32') / 255
x_test = x_test.astype('float32') / 255

#0~255인 픽셀 범위에 맞춰서 값의 범위를 0~1로 조정하기 위해 나눔

#모델 구성

model = tf.keras.models.Sequential([
   tf.keras.layers.Flatten(input_shape=(28,28)),
   tf.keras.layers.Dense(256, activation=tf.nn.sigmoid),
   tf.keras.layers.Dense(10, activation=tf.nn.softmax)                                                                    
])

#모델 컴파일
model.compile(optimizer = 'sgd',
              loss='sparse_categorical_crossentropy',
              metrics=["accuracy"])
#sgd 설명 : gradient를 구하는데 1개 데이터만 사용

#모델 훈련
model.fit(x_train, t_train, epochs=10)

#정확도 평가

test_loss, test_accuracy = model.evaluate(x_test, t_test)
print("정확도:", test_accuracy)

