# -*- coding: utf-8 -*-
"""RNN 실습.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OHUruWSAMtcQtdYPFedCjUKE1mXlTsGj
"""

import tensorflow as tf

!pip uninstall tensorflow

!pip install tensorflow==2.0.0

import tensorflow as tf

from keras.datasets import mnist

(x_train_data, y_tran_data), (x_test_data, y_test_data) = mnist.load_data()

x_train = x_train_data
y_train = y_train_data
x_test = x_test_data
y_test = y_test_data

print("x__train shape:", x_train.shape, "y_train shape:", y_train.shape)

import matplotlib.pyplot as plt

plt.imshow(x_train[3])

#전처리

x_train = x_train.astype('float32')/255
x_test = x_test.astype('float32')/255

#모델 만들기

model = tf.keras.models.Sequential([
      tf.keras.layers.SimpleRNN(128),
      tf.keras.layers.Dense(64,activation = tf.nn.tanh),
      tf.keras.layers.Dense(10, activation = tf.nn.softmax)
])

#모델 컴파일

model.compile(optimizer='adam',
             loss = 'sparse_categorical_crossentropy',
             metrics = ['accuracy'])

model.fit(x_train, y_train, epochs=3)

#정확도 평가

test_loss, test_accuracy = model.evaluate(x_test, y_test)
print("정확도 :",test_accuracy)

